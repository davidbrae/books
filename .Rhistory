mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <97 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Elementary school / no school leaving certificate","No Formal Education","Diploma from Hauptschule or Volksschule")) ~ 'Low',
EduGrp  %in% c(c("Secondary school leaving certificate without (Fach-)Abitur or Polytechnic secondary school")) ~'Medium',
EduGrp %in% c(c("Doctorate, PhD","Completed main or master studies","Completed bachelor`s degree / basic studies / pre-degree / vocational academy",
"Abitur / university entrance qualification","Entrance qualification for a university of applied sciences / Fachabitur",
"Not completed studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
Germany$CitySize
table(Germany$CitySize)
pop_citysize
pop_citysize
pop_citysize <- targets %>%
slice(136:142) %>%
select(1,2) %>%
rename('CitySize' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2,000 inhabitants", "2,000 to under 5,000 inhabitants","5,000 to under 20,000 inhabitants") ~ "Under 20,000 inhabitants",
TRUE ~ CitySize)) %>%
group_by(CitySize) %>%
summarise(Freq = sum(Freq)) %>%
mutate(Freq = Freq / sum(Freq)) %>%
mutate(CitySize = str_replace_all(CitySize,","," ")) %>%
bind_rows(data.frame(CitySize= "missing",  Freq =4/nrow(Germany)))
pop_citysize
pop_age <- targets %>%
slice(17:22) %>%
select(1,2) %>%
rename('AgeGrp' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(Freq = Freq / sum(Freq)) #%>%
pop_age
Germany$AgeGrp
table(Germany$AgeGrp)
Germany$D2a
Germany$D2
table(Germany$D2)
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(M12), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Elementary school / no school leaving certificate","No Formal Education","Diploma from Hauptschule or Volksschule")) ~ 'Low',
EduGrp  %in% c(c("Secondary school leaving certificate without (Fach-)Abitur or Polytechnic secondary school")) ~'Medium',
EduGrp %in% c(c("Doctorate, PhD","Completed main or master studies","Completed bachelor`s degree / basic studies / pre-degree / vocational academy",
"Abitur / university entrance qualification","Entrance qualification for a university of applied sciences / Fachabitur",
"Not completed studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
Germany$M12
Germany$M12
df_var_names(Germany)
pop_region
Germany$Region2
Germany$Region3
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(Region3), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Elementary school / no school leaving certificate","No Formal Education","Diploma from Hauptschule or Volksschule")) ~ 'Low',
EduGrp  %in% c(c("Secondary school leaving certificate without (Fach-)Abitur or Polytechnic secondary school")) ~'Medium',
EduGrp %in% c(c("Doctorate, PhD","Completed main or master studies","Completed bachelor`s degree / basic studies / pre-degree / vocational academy",
"Abitur / university entrance qualification","Entrance qualification for a university of applied sciences / Fachabitur",
"Not completed studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
Germany$D3b
Germany$D3a
Germany$D3c
Germany$D3b
table(Germany$D3b)
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(Region3), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Primary school","Lower secondary","Middle school")) ~ 'Low',
EduGrp  %in% c("Technical college","Abitur") ~'Medium',
EduGrp %in% c(c("Doctorate","Master’s degree","Bachelor’s degree", "Incomplete studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
Germany$EduGrp
table(Germany$EduGrp)
table(Germany$EduGrp, Germany$D3b)
#education
pop_education <- targets %>%
slice(107:114) %>%
select(1,2) %>%
rename('EduGrp' = 1, 'Freq' = 2) %>%
mutate(EduGrp = case_when(EduGrp %in% c("1 noch in schulischer Ausbildung", "2 Haupt-(Volks)schulabschluss", "7 ohne Angabe", "8 ohne Schulabschluss") ~ 'Low',
EduGrp  %in% c("3 Abschluss der allgemeinbildenden polytechnischen Oberschule der DDR","4 Realschulabschluss (Mittlere Reife) oder gleichwertiger Abschluss") ~'Medium',
EduGrp %in% c("Fachhochschulreife","Hochschulreife (Abitur)") ~ 'High')) %>%
mutate(Freq = as.numeric(Freq)) %>%
group_by(EduGrp) %>%
summarize(Freq = sum(Freq, na.rm=TRUE) ) %>%
mutate(Freq = Freq / sum(Freq)) %>%
bind_rows(data.frame(EduGrp= "missing",  Freq = 3 / nrow(Germany)))
pop_education
pop_education<-data.frame(pop_education)
pop_education$Freq <- c(pop_education[1:3,"Freq"]*(1-pop_education[4,"Freq"]),pop_education[4,"Freq"])
Germany$EduGrp
table(Germany$EduGrp)
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(Region3), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Primary school","Lower secondary","Middle school")) ~ 'Low',
EduGrp  %in% c("Technical college","Abitur") ~'Medium',
EduGrp %in% c(c("Doctorate","Master’s degree","Bachelor’s degree", "Incomplete studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
table(Germany$EduGrp, Germany$D3b)
table(is.na(Germany$EduGrp), Germany$D3b)
Germany$D3b
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(Region3), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Primary school","Lower secondary","Middle school","No formal education")) ~ 'Low',
EduGrp  %in% c("Technical college","Abitur") ~'Medium',
EduGrp %in% c(c("Doctorate","Master’s degree","Bachelor’s degree", "Incomplete studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
#main sample design
svy_Germany <- svydesign( id = ~1  , weights = ~1 , data=Germany )
rake_Germany<- rake(svy_Germany, sample=list(~EduGrp, ~AgeGrp, ~D1, ~Region, ~CitySize ),
population=list( pop_education, pop_age, pop_gender, pop_region, pop_citysize),control=list(maxit=50))
Germany$wgt <- weights( rake_Germany ) * nrow( rake_Germany ) / sum( weights( rake_Germany) )
Germany$trim_wgt <- weights(trimweights_D3(rake_Germany))
Germany$wgt <- Germany$trim_wgt* nrow( Germany ) / sum(Germany$trim_wgt)
attributes(Germany$wgt)$label <- 'Calibration weight by age, gender, education and state'
attributes(Germany$wgt)$label <- 'Calibration weight by age, gender, education and state'
Germany %>%
select(M1, wgt, EduGrp, AgeGrp) %>%
write_sav('/home/drae/Desktop/Europe/EuropeW8/Germany/Europe W8 - Germany Weights v0.1.sav')
svy_Germany <- svydesign( id = ~1  , weights = ~wgt , data=Germany )
svy_Germany <- svydesign( id = ~1  , weights = ~wgt , data=Germany )
rm(doc)
doc <- exportMOE(deffvar = 'Q1', finaldesign <- 'svy_Germany',rakeddesign <- 'rake_Germany', unweighteddata = 'Germany' )
library(SurveyAssist)
library(officer)
library(tidyverse)
library(haven)
library(survey)
library(readxl)
Germany <-  read_sav('~/Desktop/Europe/EuropeW8/Germany/Europe W8 - Germany Data (unweighted) v1.sav')
Germany<- read_sav("~/Desktop/Europe/EuropeW8/Germany/GermanyWave8.sav")
targets <- read_excel('~/Desktop/Europe/EuropeW8/Germany/Germany Population Parameters v1.xlsx')
pop_gender <- targets %>%
slice(8:9) %>%
select(1,2) %>%
rename('D1' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(Freq = Freq / sum(Freq))
pop_citysize <- targets %>%
slice(136:142) %>%
select(1,2) %>%
rename('CitySize' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2,000 inhabitants", "2,000 to under 5,000 inhabitants","5,000 to under 20,000 inhabitants") ~ "Under 20,000 inhabitants",
TRUE ~ CitySize)) %>%
group_by(CitySize) %>%
summarise(Freq = sum(Freq)) %>%
mutate(Freq = Freq / sum(Freq)) %>%
mutate(CitySize = str_replace_all(CitySize,","," ")) %>%
bind_rows(data.frame(CitySize= "missing",  Freq =4/nrow(Germany)))
pop_age <- targets %>%
slice(17:22) %>%
select(1,2) %>%
rename('AgeGrp' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(Freq = Freq / sum(Freq)) #%>%
#region
pop_region <- targets %>%
slice(c(31:34,37:43,46,49,52,55,58:60,63,66:69,72:76,79:81,84,87:89,92,95,98)) %>%
select(1,2) %>%
rename('M11' = 1, 'Freq' = 2) %>%
mutate(Freq = as.numeric(Freq)) %>%
mutate(Freq = Freq / sum(Freq)) %>%
mutate(M11 = str_replace(M11,".*?-\\s*","")) %>%
mutate(Region = case_when(M11 %in% c("Stuttgart","Karlsruhe","Freiburg","Tuebingen"  ) ~"Baden-Wuerttemberg",
M11 %in% c("Oberbayern","Niederbayern","Oberpfalz","Oberfranken","Mittelfranken","Unterfranken","Schwaben" ) ~"Bayern",
M11 %in% c("Berlin") ~"Berlin",
M11 %in% c("Brandenburg") ~ "Brandenburg",
M11 %in% c("Bremen") ~ "Bremen",
M11 %in% c("Hamburg") ~"Hamburg",
M11 %in% c("Darmstadt","Giessen","Kassel") ~"Hessen",
M11 %in% c("Mecklenburg-Vorpommern") ~ "Mecklenburg-Vorpommern",
M11 %in% c("Braunschweig","Hannover","Lueneburg","Weser-Ems") ~"Niedersachsen",
M11 %in% c("Duesseldorf","Koeln","Muenster","Detmold","Arnsberg") ~ "Nordrhein-Westfalen",
M11 %in% c("Koblenz","Trier","Rheinhessen-Pfalz") ~"Rheinland-Pfalz",
M11 %in% c("Saarland") ~"Saarland",
M11 %in% c("Dresden","Chemnitz","Leipzig") ~ "Sachsen",
M11 %in% c("Sachsen-Anhalt") ~"Sachsen-Anhalt",
M11 %in% c("Schleswig-Holstein") ~ "Schleswig Holstein",
M11 %in% c("Thueringen") ~"Thueringen")) %>%
group_by(Region) %>%
summarise(Freq = sum(Freq)) %>%
bind_rows(data.frame(Region= "missing",  Freq = 18 / nrow(Germany)))
pop_region<-data.frame(pop_region)
pop_region$Freq <- c(pop_region[1:16,"Freq"]*(1-pop_region[17,"Freq"]),pop_region[17,"Freq"])
#education
pop_education <- targets %>%
slice(107:114) %>%
select(1,2) %>%
rename('EduGrp' = 1, 'Freq' = 2) %>%
mutate(EduGrp = case_when(EduGrp %in% c("1 noch in schulischer Ausbildung", "2 Haupt-(Volks)schulabschluss", "7 ohne Angabe", "8 ohne Schulabschluss") ~ 'Low',
EduGrp  %in% c("3 Abschluss der allgemeinbildenden polytechnischen Oberschule der DDR","4 Realschulabschluss (Mittlere Reife) oder gleichwertiger Abschluss") ~'Medium',
EduGrp %in% c("Fachhochschulreife","Hochschulreife (Abitur)") ~ 'High')) %>%
mutate(Freq = as.numeric(Freq)) %>%
group_by(EduGrp) %>%
summarize(Freq = sum(Freq, na.rm=TRUE) ) %>%
mutate(Freq = Freq / sum(Freq)) %>%
bind_rows(data.frame(EduGrp= "missing",  Freq = 3 / nrow(Germany)))
pop_education<-data.frame(pop_education)
pop_education$Freq <- c(pop_education[1:3,"Freq"]*(1-pop_education[4,"Freq"]),pop_education[4,"Freq"])
Germany <- Germany %>%
mutate(D1 = as_factor(D1), EduGrp = as_factor(D3b),Region = as_factor(Region3), CitySize = as_factor(CitySize)) %>%
mutate(AgeGrp = case_when(D2 < 25 ~ '18-24',
D2 > 24 & D2 <35 ~ '25-34',
D2 > 34 & D2 <45 ~ '35-44',
D2 > 44 & D2 <55 ~ '45-54',
D2 > 54 & D2 <65 ~ '55-64',
D2 > 64 & D2 <100 ~ '65+',
TRUE ~ 'missing')) %>%
mutate(eastwest = case_when(Region %in% c("Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thueringen","Berlin") ~ "East",
Region == "Not available" ~ 'West',
TRUE ~ 'West')) %>%
mutate(CitySize = case_when(CitySize %in% c("Under 2 000 inhabitants", "2 000 to under 5 000 inhabitants","5 000 to under 20 000 inhabitants") ~ "Under 20 000 inhabitants",
CitySize == "Not available" ~ 'missing',
TRUE ~ CitySize)) %>%
mutate(Region = case_when(Region == "Not available" ~ 'missing', TRUE ~ Region)) %>%
mutate(EduGrp = case_when(EduGrp %in% c(c("Primary school","Lower secondary","Middle school","No formal education")) ~ 'Low',
EduGrp  %in% c("Technical college","Abitur") ~'Medium',
EduGrp %in% c(c("Doctorate","Master’s degree","Bachelor’s degree", "Incomplete studies")) ~ 'High',
EduGrp %in% c("Don't know (vol.)","Refused (vol.)") ~ 'missing'))
esttarg(D1,pop_gender, Germany)
esttarg(AgeGrp,pop_age, Germany)
esttarg(Region,pop_region,Germany)
esttarg(EduGrp, pop_education, Germany)
esttarg(CitySize, pop_citysize, Germany)
#main sample design
svy_Germany <- svydesign( id = ~1  , weights = ~1 , data=Germany )
rake_Germany<- rake(svy_Germany, sample=list(~EduGrp, ~AgeGrp, ~D1, ~Region, ~CitySize ),
population=list( pop_education, pop_age, pop_gender, pop_region, pop_citysize),control=list(maxit=50))
Germany$wgt <- weights( rake_Germany ) * nrow( rake_Germany ) / sum( weights( rake_Germany) )
Germany$trim_wgt <- weights(trimweights_D3(rake_Germany))
Germany$wgt <- Germany$trim_wgt* nrow( Germany ) / sum(Germany$trim_wgt)
attributes(Germany$wgt)$label <- 'Calibration weight by age, gender, education and state'
Germany %>%
select(M1, wgt, EduGrp, AgeGrp) %>%
write_sav('/home/drae/Desktop/Europe/EuropeW8/Germany/Europe W8 - Germany Weights v0.1.sav')
svy_Germany <- svydesign( id = ~1  , weights = ~wgt , data=Germany )
rm(doc)
doc <- exportMOE(deffvar = 'Q1', finaldesign <- 'svy_Germany',rakeddesign <- 'rake_Germany', unweighteddata = 'Germany' )
print(doc, target = "/home/drae/Desktop/Europe/EuropeW8/Germany/Germany W8 MOE and Deff v.1.docx")
#--------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
options(tibble.width=Inf)
options(tibble.length=Inf)
options(survey.lonely.psu="adjust")
library(haven)
library(survey)
library(tidyverse)
library(readxl)
library(SampleFrames)
library(SurveyAssist)
#dataset
sudan <- read_sav('~/Desktop/Sudan Telephone W3 Full Data v0.1.sav')
framesizes <- read_excel('/home/drae/Desktop/DruidRepos/SudanDruid/SudanNumbers.xlsx') %>%
group_by(provider) %>%
summarise(N = sum(length))
#dataset
sudan <- read_sav('~/Desktop/Sudan Telephone W3 Full Data v0.1.sav')
framesizes <- read_excel('/home/drae/Desktop/DruidRepos/SudanDruid/SudanNumbers.xlsx') %>%
group_by(provider) %>%
summarise(N = sum(length))
framesizes
framesizes <- read_excel('/home/drae/Desktop/DruidRepos/SudanDruid/SudanNumbers.xlsx') %>%
group_by(provider) %>%
summarise(N = sum(length))
#sampledraw <- read_csv("~/Desktop/Sudan Telephone W2 Sample Draw CaseIDs 1001 to 81000 - Formatted.csv")
sampledraw <- read_csv("~/Desktop/Sudan Telephone W3 Sample Draw CaseIDs 1001 to 81000_formatted v0.1.csv")
sampledraw
sudan <- sampledraw %>%
select(M3 = CaseID, provider = Provider_Province) %>%
right_join(sudan)
baseweights <- sudan %>%
group_by(provider) %>%
summarise(n = n()) %>%
left_join(framesizes) %>%
filter(!is.na(provider)) %>%
mutate(basewgt = N/n) %>%
select(provider, basewgt)
sudan <- sudan %>%
left_join(baseweights) %>%
filter(!is.na(basewgt)) %>%
filter(RESPONSECODE == 18 )
sudan <- sudan %>%
mutate(MobileNumbers = M15, MobileUsers = M16 ) %>%
mutate(NumofMobiles = case_when(MobileNumbers %in% c(98,99) ~ MobileNumbers[which.max(tabulate(match(MobileNumbers, MobileNumbers)))] ,
MobileNumbers == 0 ~ 1,
MobileNumbers > 10 ~ 10,  TRUE ~ MobileNumbers)) %>%
mutate(MobileSharers = case_when(MobileUsers %in% c(98,99) ~ 1  ,
MobileUsers %in% c(0,96) ~ 1,
MobileUsers > 10 ~ 10,
is.na(MobileUsers) ~ 1 ,
TRUE ~ MobileUsers)) %>%
mutate(multweight = NumofMobiles / MobileSharers ) %>%
mutate(totalwgt = basewgt * multweight)
sudan$M16
sudan
#dataset
sudan <- read_sav('~/Desktop/Sudan Telephone W3 Full Data v0.1.sav')
sudan
sampledraw
#--------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
options(tibble.width=Inf)
options(tibble.length=Inf)
options(survey.lonely.psu="adjust")
library(haven)
library(survey)
library(tidyverse)
library(readxl)
library(SampleFrames)
library(SurveyAssist)
#--------------------------------------------------------------------------------------------------------------------
#---------------------------------Load Data--------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
#dataset
sudan <- read_sav('~/Desktop/Sudan Telephone W3 Full Data v0.1.sav')
#from druid
#sampledraw<- read_csv('~/Desktop/Somalia Telephone W1 Sampled Numbers.csv')
framesizes <- read_excel('/home/drae/Desktop/DruidRepos/SudanDruid/SudanNumbers.xlsx') %>%
group_by(provider) %>%
summarise(N = sum(length))
#sampledraw <- read_csv("~/Desktop/Sudan Telephone W2 Sample Draw CaseIDs 1001 to 81000 - Formatted.csv")
sampledraw <- read_csv("~/Desktop/Sudan Telephone W3 Sample Draw CaseIDs 1001 to 81000_formatted v0.1.csv")
sudan$$M3
sudan$$M3
sudan$$CaseID
sudan$CaseID
sudan <- sampledraw %>%
select( CaseID, provider = Provider_Province) %>%
right_join(sudan)
sudan
baseweights <- sudan %>%
group_by(provider) %>%
summarise(n = n()) %>%
left_join(framesizes) %>%
filter(!is.na(provider)) %>%
mutate(basewgt = N/n) %>%
select(provider, basewgt)
sudan <- sudan %>%
left_join(baseweights) %>%
filter(!is.na(basewgt)) %>%
filter(RESPONSECODE == 18 )
sudan <- sudan %>%
mutate(MobileNumbers = M15, MobileUsers = M16 ) %>%
mutate(NumofMobiles = case_when(MobileNumbers %in% c(98,99) ~ MobileNumbers[which.max(tabulate(match(MobileNumbers, MobileNumbers)))] ,
MobileNumbers == 0 ~ 1,
MobileNumbers > 10 ~ 10,  TRUE ~ MobileNumbers)) %>%
mutate(MobileSharers = case_when(MobileUsers %in% c(98,99) ~ 1  ,
MobileUsers %in% c(0,96) ~ 1,
MobileUsers > 10 ~ 10,
is.na(MobileUsers) ~ 1 ,
TRUE ~ MobileUsers)) %>%
mutate(multweight = NumofMobiles / MobileSharers ) %>%
mutate(totalwgt = basewgt * multweight)
sudan$basewgt
table(sudan$basewgt)
sudan $totalwgt
table(is.na(sudan $totalwgt)
)
sudan$M15
sudan$M16
#no targets for somalia - assume gender split
#gender
pop_gender <- data.frame(Gender = c("Male","Female"), Freq = rep(.5,2))
sudan <- sudan %>%
mutate(Gender = as_factor(D1))
esttarg(Gender,pop_gender, sudan)
#main sample design
svy_sudan<- svydesign( id = ~1  , weights = ~totalwgt , data = sudan )
rake_sudan<- rake(svy_sudan, sample=list(~Gender),
population=list(pop_gender),control=list(maxit=50))
sudan$wgt <- weights( rake_sudan ) * nrow( rake_sudan ) / sum( weights( rake_sudan) )
sudan$trim_wgt <- weights(trimweights_D3(rake_sudan))
sudan$wgt <- sudan$trim_wgt* nrow( sudan ) / sum(sudan$trim_wgt )
attributes(sudan$wgt)$label <- 'Basewgt with multiplicity adjustment post stratified to gender'
sudan %>%
select(M1,wgt)
sudan %>%
select(M1,wgt) %>%
write_sav('~/Desktop/Sudan Telephone NS W3 Weights v.1.sav')
svy_sudan <- svydesign( id = ~1, strata = ~provider,weights = ~wgt , data=sudan )
dd <- svymean( ~as_factor( Q1 ) , svy_sudan , deff = "replace" , na.rm = TRUE )
d3_moe(n=nrow(svy_sudan), deff =  round(weighted.mean(deff(dd)[!is.na(deff(dd))],svytable(~Q1, svy_sudan)),2))
dd
unique(oldframewithelectorals$Sublvl_01)
setwd('~/Desktop/books')
rsconnect::writeManifest()
library(shiny)
runApp()
books <- read.csv("Books.csv", stringsAsFactors = FALSE)
books
head(books)
tail(books)
books <- read.csv("Books.csv", stringsAsFactors = FALSE)
tail(books)
runApp()
books$Gender
unique(books$Gender)
runApp()
runApp()
